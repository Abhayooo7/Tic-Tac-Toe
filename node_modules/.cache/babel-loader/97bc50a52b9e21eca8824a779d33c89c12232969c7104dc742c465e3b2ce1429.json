{"ast":null,"code":"var _jsxFileName = \"/Users/abhaymahajan/Desktop/WebDev/Tic_tac_toe/src/App.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n\n// function Square({value, onClickSquare}) {\n//   return (\n//     <button className=\"square\" onClick={onClickSquare} >\n//       {value}\n//     </button>\n//   );\n// }\n\n// function Board({x, squares, onPlay}) {\n//   function handleClick(i){\n//     if (calculateTheWinner(squares) || squares[i]){\n//       return;\n//     }\n//     const nextSquares = squares.slice();\n//     if(x) {\n//       nextSquares[i] = 'X';\n//     } else{\n//       nextSquares[i] = 'O';\n//     }\n//     onPlay(nextSquares);\n//   }\n\n//   const winner = calculateTheWinner(squares);\n//   let status;\n//   if(winner){ \n//     status = 'Winner: ' + winner;\n//   } else {\n//     status = 'Next Player: ' + (x ? 'X':'O');\n//   }\n//   return (\n//     <>\n//       <div className='status'>{status}</div>\n//       <div className=\"board-row\">\n//         <Square value={squares[0]} onClickSquare={() => handleClick(0)} />\n//         <Square value={squares[1]} onClickSquare={() => handleClick(1)} />\n//         <Square value={squares[2]} onClickSquare={() => handleClick(2)} />\n//       </div>\n//       <div className=\"board-row\">\n//         <Square value={squares[3]} onClickSquare={() => handleClick(3)} />\n//         <Square value={squares[4]} onClickSquare={() => handleClick(4)} />\n//         <Square value={squares[5]} onClickSquare={() => handleClick(5)} />\n//       </div>\n//       <div className=\"board-row\">\n//         <Square value={squares[6]} onClickSquare={() => handleClick(6)} />\n//         <Square value={squares[7]} onClickSquare={() => handleClick(7)} />\n//         <Square value={squares[8]} onClickSquare={() => handleClick(8)} />\n//       </div>\n//     </>\n//   );\n// }\n\n// function calculateTheWinner(squares) {\n//   const lines = [\n//     [0, 1, 2],\n//     [3, 4, 5],\n//     [6, 7, 8],\n//     [0, 3, 6],\n//     [1, 4, 7],\n//     [2, 5, 8],\n//     [0, 4, 8],\n//     [2, 4, 6]\n//   ];\n\n//   for (let i=0; i< lines.length ; i++) {\n//     const [a,b,c] = lines[i];\n//     if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]){\n//       return squares[a];\n//     }\n//   }\n//   return null;\n// }\n\n// export default function Game() {\n\n//   const [history, setHistory] = useState([Array(9).fill(null)]);\n//   const [currentMove, setCurrentMove] = useState(0);\n//   const x = currentMove % 2 === 0;\n//   const currentSquares = history[currentMove];\n\n//   function handlePlay(nextSquares) {\n//     const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n//     setHistory(nextHistory);\n//     setCurrentMove(nextHistory.length - 1);\n//   }\n\n//   function jumpTo(nextMove) {\n//     setCurrentMove(nextMove);\n//   }\n//   const moves = history.map((squares, move) => {\n//     let description;\n//     if(move > 0) {\n//       description = 'Go to move #' + move;\n//     } else {\n//       description = 'Go to game start';\n//     }\n\n//     return (\n//       <li key={move}>\n//         <button onClick={() => jumpTo(move)}>{description}</button>\n//       </li>\n//     );\n//   });\n\n//   return (\n//     <div className='game'>\n//       <div className='game-board'>\n//         <Board x={x} squares={currentSquares} onPlay={handlePlay} />\n//       </div>\n//       <div className='game-info'>\n//         <ol>{moves}</ol>\n//       </div>\n//     </div>\n//   );\n// }\n\n//Practice\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  val,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nexport default function Board() {\n  _s();\n  const [x, setX] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  function handleClick(i) {\n    const nextSquare = squares.slice();\n    if (x) {\n      nextSquare[i] = 'X';\n    } else {\n      nextSquare[i] = 'O';\n    }\n    setSquares(nextSquare);\n    setX(!x);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: squares[0],\n        onSquareClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: squares[1],\n        onSquareClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: squares[2],\n        onSquareClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: squares[3],\n        onSquareClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: squares[4],\n        onSquareClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: squares[5],\n        onSquareClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: squares[6],\n        onSquareClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: squares[7],\n        onSquareClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: squares[8],\n        onSquareClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Board, \"G92dy7vY9QMoUG9+rq1WXwP/1aw=\");\n_c2 = Board;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","val","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_s","x","setX","squares","setSquares","Array","fill","handleClick","i","nextSquare","slice","_c2","$RefreshReg$"],"sources":["/Users/abhaymahajan/Desktop/WebDev/Tic_tac_toe/src/App.js"],"sourcesContent":["// import { useState } from 'react';\n\n// function Square({value, onClickSquare}) {\n//   return (\n//     <button className=\"square\" onClick={onClickSquare} >\n//       {value}\n//     </button>\n//   );\n// }\n\n// function Board({x, squares, onPlay}) {\n//   function handleClick(i){\n//     if (calculateTheWinner(squares) || squares[i]){\n//       return;\n//     }\n//     const nextSquares = squares.slice();\n//     if(x) {\n//       nextSquares[i] = 'X';\n//     } else{\n//       nextSquares[i] = 'O';\n//     }\n//     onPlay(nextSquares);\n//   }\n\n//   const winner = calculateTheWinner(squares);\n//   let status;\n//   if(winner){ \n//     status = 'Winner: ' + winner;\n//   } else {\n//     status = 'Next Player: ' + (x ? 'X':'O');\n//   }\n//   return (\n//     <>\n//       <div className='status'>{status}</div>\n//       <div className=\"board-row\">\n//         <Square value={squares[0]} onClickSquare={() => handleClick(0)} />\n//         <Square value={squares[1]} onClickSquare={() => handleClick(1)} />\n//         <Square value={squares[2]} onClickSquare={() => handleClick(2)} />\n//       </div>\n//       <div className=\"board-row\">\n//         <Square value={squares[3]} onClickSquare={() => handleClick(3)} />\n//         <Square value={squares[4]} onClickSquare={() => handleClick(4)} />\n//         <Square value={squares[5]} onClickSquare={() => handleClick(5)} />\n//       </div>\n//       <div className=\"board-row\">\n//         <Square value={squares[6]} onClickSquare={() => handleClick(6)} />\n//         <Square value={squares[7]} onClickSquare={() => handleClick(7)} />\n//         <Square value={squares[8]} onClickSquare={() => handleClick(8)} />\n//       </div>\n//     </>\n//   );\n// }\n\n// function calculateTheWinner(squares) {\n//   const lines = [\n//     [0, 1, 2],\n//     [3, 4, 5],\n//     [6, 7, 8],\n//     [0, 3, 6],\n//     [1, 4, 7],\n//     [2, 5, 8],\n//     [0, 4, 8],\n//     [2, 4, 6]\n//   ];\n\n//   for (let i=0; i< lines.length ; i++) {\n//     const [a,b,c] = lines[i];\n//     if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]){\n//       return squares[a];\n//     }\n//   }\n//   return null;\n// }\n\n// export default function Game() {\n\n//   const [history, setHistory] = useState([Array(9).fill(null)]);\n//   const [currentMove, setCurrentMove] = useState(0);\n//   const x = currentMove % 2 === 0;\n//   const currentSquares = history[currentMove];\n\n//   function handlePlay(nextSquares) {\n//     const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n//     setHistory(nextHistory);\n//     setCurrentMove(nextHistory.length - 1);\n//   }\n\n//   function jumpTo(nextMove) {\n//     setCurrentMove(nextMove);\n//   }\n//   const moves = history.map((squares, move) => {\n//     let description;\n//     if(move > 0) {\n//       description = 'Go to move #' + move;\n//     } else {\n//       description = 'Go to game start';\n//     }\n\n//     return (\n//       <li key={move}>\n//         <button onClick={() => jumpTo(move)}>{description}</button>\n//       </li>\n//     );\n//   });\n\n//   return (\n//     <div className='game'>\n//       <div className='game-board'>\n//         <Board x={x} squares={currentSquares} onPlay={handlePlay} />\n//       </div>\n//       <div className='game-info'>\n//         <ol>{moves}</ol>\n//       </div>\n//     </div>\n//   );\n// }\n\n//Practice\nimport { useState } from 'react';\n\nfunction Square({ val, onSquareClick }) {\n\n  return (\n    <button className=\"square\" onClick={onSquareClick} >\n      {val}\n    </button>\n  );\n}\n\nexport default function Board(){\n  const [ x, setX ] = useState(true);\n  const [ squares, setSquares ] = useState(Array(9).fill(null));\n\n  function handleClick(i) {\n    const nextSquare = squares.slice();\n    if(x) {\n      nextSquare[i] = 'X';\n    } else {\n      nextSquare[i] = 'O';\n    }\n    setSquares(nextSquare);\n    setX(!x);\n  }\n\n  return (\n    <>\n      <div className=\"board-row\">\n        <Square val={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square val={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square val={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className=\"board-row\">\n        <Square val={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square val={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square val={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className=\"board-row\">\n        <Square val={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square val={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square val={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}