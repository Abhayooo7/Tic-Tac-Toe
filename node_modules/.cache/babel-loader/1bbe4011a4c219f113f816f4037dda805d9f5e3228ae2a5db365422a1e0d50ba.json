{"ast":null,"code":"var _jsxFileName = \"/Users/abhaymahajan/Desktop/WebDev/Tic_tac_toe/src/App.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n\n// function Square({value, onClickSquare}) {\n//   return (\n//     <button className=\"square\" onClick={onClickSquare} >\n//       {value}\n//     </button>\n//   );\n// }\n\n// function Board({x, squares, onPlay}) {\n//   function handleClick(i){\n//     if (calculateTheWinner(squares) || squares[i]){\n//       return;\n//     }\n//     const nextSquares = squares.slice();\n//     if(x) {\n//       nextSquares[i] = 'X';\n//     } else{\n//       nextSquares[i] = 'O';\n//     }\n//     onPlay(nextSquares);\n//   }\n\n//   const winner = calculateTheWinner(squares);\n//   let status;\n//   if(winner){ \n//     status = 'Winner: ' + winner;\n//   } else {\n//     status = 'Next Player: ' + (x ? 'X':'O');\n//   }\n//   return (\n//     <>\n//       <div className='status'>{status}</div>\n//       <div className=\"board-row\">\n//         <Square value={squares[0]} onClickSquare={() => handleClick(0)} />\n//         <Square value={squares[1]} onClickSquare={() => handleClick(1)} />\n//         <Square value={squares[2]} onClickSquare={() => handleClick(2)} />\n//       </div>\n//       <div className=\"board-row\">\n//         <Square value={squares[3]} onClickSquare={() => handleClick(3)} />\n//         <Square value={squares[4]} onClickSquare={() => handleClick(4)} />\n//         <Square value={squares[5]} onClickSquare={() => handleClick(5)} />\n//       </div>\n//       <div className=\"board-row\">\n//         <Square value={squares[6]} onClickSquare={() => handleClick(6)} />\n//         <Square value={squares[7]} onClickSquare={() => handleClick(7)} />\n//         <Square value={squares[8]} onClickSquare={() => handleClick(8)} />\n//       </div>\n//     </>\n//   );\n// }\n\n// function calculateTheWinner(squares) {\n//   const lines = [\n//     [0, 1, 2],\n//     [3, 4, 5],\n//     [6, 7, 8],\n//     [0, 3, 6],\n//     [1, 4, 7],\n//     [2, 5, 8],\n//     [0, 4, 8],\n//     [2, 4, 6]\n//   ];\n\n//   for (let i=0; i< lines.length ; i++) {\n//     const [a,b,c] = lines[i];\n//     if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]){\n//       return squares[a];\n//     }\n//   }\n//   return null;\n// }\n\n// export default function Game() {\n\n//   const [history, setHistory] = useState([Array(9).fill(null)]);\n//   const [currentMove, setCurrentMove] = useState(0);\n//   const x = currentMove % 2 === 0;\n//   const currentSquares = history[currentMove];\n\n//   function handlePlay(nextSquares) {\n//     const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n//     setHistory(nextHistory);\n//     setCurrentMove(nextHistory.length - 1);\n//   }\n\n//   function jumpTo(nextMove) {\n//     setCurrentMove(nextMove);\n//   }\n//   const moves = history.map((squares, move) => {\n//     let description;\n//     if(move > 0) {\n//       description = 'Go to move #' + move;\n//     } else {\n//       description = 'Go to game start';\n//     }\n\n//     return (\n//       <li key={move}>\n//         <button onClick={() => jumpTo(move)}>{description}</button>\n//       </li>\n//     );\n//   });\n\n//   return (\n//     <div className='game'>\n//       <div className='game-board'>\n//         <Board x={x} squares={currentSquares} onPlay={handlePlay} />\n//       </div>\n//       <div className='game-info'>\n//         <ol>{moves}</ol>\n//       </div>\n//     </div>\n//   );\n// }\n\n//Practice\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  val,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  x,\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    if (squares[i] || calculateTheWinner(squares)) {\n      return;\n    }\n    const nextSquare = squares.slice();\n    if (x) {\n      nextSquare[i] = 'X';\n    } else {\n      nextSquare[i] = 'O';\n    }\n    onPlay(nextSquare);\n  }\n  const winner = calculateTheWinner(squares);\n  let status;\n  if (winner) {\n    status = 'Winner is: ' + winner;\n  } else {\n    status = 'Next player is: ' + (x ? 'X' : 'O');\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: squares[0],\n        onSquareClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: squares[1],\n        onSquareClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: squares[2],\n        onSquareClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: squares[3],\n        onSquareClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: squares[4],\n        onSquareClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: squares[5],\n        onSquareClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: squares[6],\n        onSquareClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: squares[7],\n        onSquareClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: squares[8],\n        onSquareClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [x, setX] = useState(true);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const curSquare = history[history.length - 1];\n  const [curMove, setCurMove] = useState(0);\n  function handlePlay(nextSquare) {\n    setHistory([...history, nextSquare]);\n    setX(!x);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    setXIsNext(nextMove % 2 === 0);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-game\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        x: x,\n        squares: curSquare,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"GHgGQnyAOkyZnEMftuQ8cCYPBIM=\");\n_c3 = Game;\nfunction calculateTheWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","val","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","x","squares","onPlay","handleClick","i","calculateTheWinner","nextSquare","slice","winner","status","_c2","Game","_s","setX","history","setHistory","Array","fill","curSquare","length","curMove","setCurMove","handlePlay","jumpTo","nextMove","setCurrentMove","setXIsNext","moves","map","move","description","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/abhaymahajan/Desktop/WebDev/Tic_tac_toe/src/App.js"],"sourcesContent":["// import { useState } from 'react';\n\n// function Square({value, onClickSquare}) {\n//   return (\n//     <button className=\"square\" onClick={onClickSquare} >\n//       {value}\n//     </button>\n//   );\n// }\n\n// function Board({x, squares, onPlay}) {\n//   function handleClick(i){\n//     if (calculateTheWinner(squares) || squares[i]){\n//       return;\n//     }\n//     const nextSquares = squares.slice();\n//     if(x) {\n//       nextSquares[i] = 'X';\n//     } else{\n//       nextSquares[i] = 'O';\n//     }\n//     onPlay(nextSquares);\n//   }\n\n//   const winner = calculateTheWinner(squares);\n//   let status;\n//   if(winner){ \n//     status = 'Winner: ' + winner;\n//   } else {\n//     status = 'Next Player: ' + (x ? 'X':'O');\n//   }\n//   return (\n//     <>\n//       <div className='status'>{status}</div>\n//       <div className=\"board-row\">\n//         <Square value={squares[0]} onClickSquare={() => handleClick(0)} />\n//         <Square value={squares[1]} onClickSquare={() => handleClick(1)} />\n//         <Square value={squares[2]} onClickSquare={() => handleClick(2)} />\n//       </div>\n//       <div className=\"board-row\">\n//         <Square value={squares[3]} onClickSquare={() => handleClick(3)} />\n//         <Square value={squares[4]} onClickSquare={() => handleClick(4)} />\n//         <Square value={squares[5]} onClickSquare={() => handleClick(5)} />\n//       </div>\n//       <div className=\"board-row\">\n//         <Square value={squares[6]} onClickSquare={() => handleClick(6)} />\n//         <Square value={squares[7]} onClickSquare={() => handleClick(7)} />\n//         <Square value={squares[8]} onClickSquare={() => handleClick(8)} />\n//       </div>\n//     </>\n//   );\n// }\n\n// function calculateTheWinner(squares) {\n//   const lines = [\n//     [0, 1, 2],\n//     [3, 4, 5],\n//     [6, 7, 8],\n//     [0, 3, 6],\n//     [1, 4, 7],\n//     [2, 5, 8],\n//     [0, 4, 8],\n//     [2, 4, 6]\n//   ];\n\n//   for (let i=0; i< lines.length ; i++) {\n//     const [a,b,c] = lines[i];\n//     if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]){\n//       return squares[a];\n//     }\n//   }\n//   return null;\n// }\n\n// export default function Game() {\n\n//   const [history, setHistory] = useState([Array(9).fill(null)]);\n//   const [currentMove, setCurrentMove] = useState(0);\n//   const x = currentMove % 2 === 0;\n//   const currentSquares = history[currentMove];\n\n//   function handlePlay(nextSquares) {\n//     const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n//     setHistory(nextHistory);\n//     setCurrentMove(nextHistory.length - 1);\n//   }\n\n//   function jumpTo(nextMove) {\n//     setCurrentMove(nextMove);\n//   }\n//   const moves = history.map((squares, move) => {\n//     let description;\n//     if(move > 0) {\n//       description = 'Go to move #' + move;\n//     } else {\n//       description = 'Go to game start';\n//     }\n\n//     return (\n//       <li key={move}>\n//         <button onClick={() => jumpTo(move)}>{description}</button>\n//       </li>\n//     );\n//   });\n\n//   return (\n//     <div className='game'>\n//       <div className='game-board'>\n//         <Board x={x} squares={currentSquares} onPlay={handlePlay} />\n//       </div>\n//       <div className='game-info'>\n//         <ol>{moves}</ol>\n//       </div>\n//     </div>\n//   );\n// }\n\n//Practice\nimport { useState } from 'react';\n\nfunction Square({ val, onSquareClick }) {\n\n  return (\n    <button className=\"square\" onClick={onSquareClick} >\n      {val}\n    </button>\n  );\n}\n\nfunction Board({ x, squares, onPlay}){\n  function handleClick(i) {\n    if(squares[i] || calculateTheWinner(squares)) {\n      return;\n    }\n    const nextSquare = squares.slice();\n    if(x) {\n      nextSquare[i] = 'X';\n    } else {\n      nextSquare[i] = 'O';\n    }\n    onPlay(nextSquare);\n  }\n\n  const winner = calculateTheWinner(squares);\n  let status;\n  if(winner) {\n    status = 'Winner is: ' + winner;\n  } else {\n    status = 'Next player is: ' + (x ? 'X' : 'O');\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        <Square val={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square val={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square val={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className=\"board-row\">\n        <Square val={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square val={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square val={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className=\"board-row\">\n        <Square val={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square val={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square val={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n    </>\n  );\n}\n\nexport default function Game() {\n\n  const [ x, setX ] = useState(true);\n  const [ history, setHistory] = useState([Array(9).fill(null)]);\n  const curSquare = history[history.length-1];\n  const [ curMove, setCurMove] = useState(0);\n\n  function handlePlay(nextSquare) {\n    setHistory([...history, nextSquare]);\n    setX(!x);\n  }\n  function jumpTo(nextMove){\n    setCurrentMove(nextMove);\n    setXIsNext(nextMove % 2 === 0);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return (\n      <li>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"board-game\">\n        <Board x={x} squares={curSquare} onPlay={handlePlay} />\n      </div>  \n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateTheWinner(squares){\n  const lines = [\n    [0,1,2],\n    [3,4,5],\n    [6,7,8],\n    [0,3,6],\n    [1,4,7],\n    [2,5,8],\n    [0,4,8],\n    [2,4,6]\n  ];\n  for ( let i=0; i<lines.length;i++) {\n    const [a,b,c] = lines[i];\n    if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n      return squares[a];\n    }\n  }\n  return null;\n}"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,MAAMA,CAAC;EAAEC,GAAG;EAAEC;AAAc,CAAC,EAAE;EAEtC,oBACEL,OAAA;IAAQM,SAAS,EAAC,QAAQ;IAACC,OAAO,EAAEF,aAAc;IAAAG,QAAA,EAC/CJ;EAAG;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEb;AAACC,EAAA,GAPQV,MAAM;AASf,SAASW,KAAKA,CAAC;EAAEC,CAAC;EAAEC,OAAO;EAAEC;AAAM,CAAC,EAAC;EACnC,SAASC,WAAWA,CAACC,CAAC,EAAE;IACtB,IAAGH,OAAO,CAACG,CAAC,CAAC,IAAIC,kBAAkB,CAACJ,OAAO,CAAC,EAAE;MAC5C;IACF;IACA,MAAMK,UAAU,GAAGL,OAAO,CAACM,KAAK,CAAC,CAAC;IAClC,IAAGP,CAAC,EAAE;MACJM,UAAU,CAACF,CAAC,CAAC,GAAG,GAAG;IACrB,CAAC,MAAM;MACLE,UAAU,CAACF,CAAC,CAAC,GAAG,GAAG;IACrB;IACAF,MA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}